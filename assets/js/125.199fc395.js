(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{477:function(t,r,e){"use strict";e.r(r);var n=e(4),o=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"对象是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象是什么"}},[t._v("#")]),t._v(" 对象是什么")]),t._v(" "),e("p",[t._v("面向对象编程(Object oriented Programming,缩写为OOP)是目前主流的编程范式。它将真实世界各种复杂的关系，抽象为一个个对象，然后由对象之间的分工与合作，完成对真实世界的模拟。")]),t._v(" "),e("p",[t._v("每一个对象都是功能中心，具有明确分工，可以完成接受信息、处理数据、发出信息等任务。对象可以复用，通过继承机制还可以定制。因此，面向对象编程具有灵活、代码可复用、高度模块化等特点，容易维护和开发，比起由一系列函数或指令组成的传统的过程式编程（procedural programming），更适合多人合作的大型软件项目。")]),t._v(" "),e("p",[t._v("那么，“对象”（object）到底是什么？我们从两个层次来理解。")]),t._v(" "),e("p",[e("strong",[t._v("【1】对象是单个实物的抽象")])]),t._v(" "),e("p",[t._v("一本书、一辆汽车、一个人都可以是对象，一个数据库、一张网页、一个与远程服务器的连接也可以是对象。当实物被抽象成对象，实物之间的关系就变成了对象之间的关系，从而就可以模拟现实情况，针对对象进行编程。")]),t._v(" "),e("p",[e("strong",[t._v("【2】对象是一个容器，封装了属性(property)和方法(method)")])]),t._v(" "),e("p",[t._v("属性是对象的状态，方法是对象的行为（完成某种任务）。比如，我们可以把动物抽象为"),e("code",[t._v("animal")]),t._v("对象，使用“属性”记录具体是那一种动物，使用“方法”表示动物的某种行为（奔跑、捕猎、休息等等）。")])])}),[],!1,null,null,null);r.default=o.exports}}]);