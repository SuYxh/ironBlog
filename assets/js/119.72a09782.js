(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{468:function(e,v,_){"use strict";_.r(v);var t=_(4),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h3",{attrs:{id:"new命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#new命令"}},[e._v("#")]),e._v(" new命令")]),e._v(" "),_("p",[e._v("大家也能看到，如果我们想创建一个对象，声明构造函数之后，必须使用"),_("code",[e._v("new")]),e._v("命令来实例化对象。那么我们来研究一下"),_("code",[e._v("new")]),e._v("命令的原理")]),e._v(" "),_("p",[e._v("使用"),_("code",[e._v("new")]),e._v("命令时，它后面的函数依次执行下面的步骤")]),e._v(" "),_("ol",[_("li",[e._v("创建一个空对象，作为将要返回的对象实例")]),e._v(" "),_("li",[e._v("将这个空对象的原型，指向了构造函数的"),_("code",[e._v("prototype")]),e._v("属性")]),e._v(" "),_("li",[e._v("将这个空对象赋值给函数内部的"),_("code",[e._v("this")]),e._v("关键字")]),e._v(" "),_("li",[e._v("开始执行构造函数内部的代码")])]),e._v(" "),_("p",[e._v("也就是说，构造函数内部，"),_("code",[e._v("this")]),e._v("指的是一个新生成的空对象，所有针对"),_("code",[e._v("this")]),e._v("的操作，都会发生在这个空对象上。构造函数之所以叫“构造函数”，就是说这个函数的目的，就是操作一个空对象（即"),_("code",[e._v("this")]),e._v("对象），将其“构造”为需要的样子。")])])}),[],!1,null,null,null);v.default=o.exports}}]);