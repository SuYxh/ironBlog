(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{410:function(e,t,o){"use strict";o.r(t);var n=o(4),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h3",{attrs:{id:"_1-什么是httponly"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是httponly"}},[e._v("#")]),e._v(" 1.什么是HttpOnly?")]),e._v(" "),o("p",[e._v("如果cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击，窃取cookie内容，这样就增加了cookie的安全性，即便是这样，也不要将重要信息存入cookie。XSS全称Cross SiteScript，跨站脚本攻击，是Web程序中常见的漏洞，XSS属于被动式且用于客户端的攻击方式，所以容易被忽略其危害性。其原理是攻击者向有XSS漏洞的网站中输入(传入)恶意的HTML代码，当其它用户浏览该网站时，这段HTML代码会自动执行，从而达到攻击的目的。如，盗取用户Cookie、破坏页面结构、重定向到其它网站等。")]),e._v(" "),o("h3",{attrs:{id:"_2-httponly的设置样例"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-httponly的设置样例"}},[e._v("#")]),e._v(" 2.HttpOnly的设置样例")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('response.setHeader("Set-Cookie", "cookiename=httponlyTest;Path=/;Domain=domainvalue;Max-Age=seconds;HTTPOnly");\n\n//设置cookie\n\nresponse.addHeader("Set-Cookie", "uid=112; Path=/; HttpOnly")\n\n\n//设置多个cookie\n\nresponse.addHeader("Set-Cookie", "uid=112; Path=/; HttpOnly");\n\nresponse.addHeader("Set-Cookie", "timeout=30; Path=/test; HttpOnly");\n\n\n//设置https的cookie\n\nresponse.addHeader("Set-Cookie", "uid=112; Path=/; Secure; HttpOnly");\n')])])]),o("p",[e._v("具体参数的含义再次不做阐述，设置完毕后通过js脚本是读不到该cookie的，但使用如下方式可以读取。")]),e._v(" "),o("p",[o("code",[e._v("Cookie cookies[]=request.getCookies();")])]),e._v(" "),o("p",[e._v("注意："),o("code",[e._v("httponly")]),e._v("只是阻止了"),o("code",[e._v("js")]),e._v("获取"),o("code",[e._v("httponly")]),e._v("值为"),o("code",[e._v("true")]),e._v("所对应的"),o("code",[e._v("cookie")]),e._v("键值队，并不能拦截XSS，想要拦截XSS除了浏览器的filter以外，更多的是程序本身做好参数的过滤。")])])}),[],!1,null,null,null);t.default=s.exports}}]);