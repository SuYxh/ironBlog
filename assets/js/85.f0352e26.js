(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{438:function(t,e,a){"use strict";a.r(e);var s=a(4),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#表单修饰符"}},[t._v("表单修饰符")]),a("ul",[a("li",[a("a",{attrs:{href:"#事件修饰符"}},[t._v("事件修饰符")])]),a("li",[a("a",{attrs:{href:"#"}})]),a("li",[a("a",{attrs:{href:"#鼠标按钮修饰符"}},[t._v("鼠标按钮修饰符")])]),a("li",[a("a",{attrs:{href:"#键值修饰符"}},[t._v("键值修饰符")])]),a("li",[a("a",{attrs:{href:"#v-bind修饰符"}},[t._v("v-bind修饰符")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"表单修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单修饰符"}},[t._v("#")]),t._v(" 表单修饰符")]),t._v(" "),a("p",[t._v("填写表单，最常用的是什么？input！v-model~而我们的修饰符正是为了简化这些东西而存在的")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".lazy")])])]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div>   <input type="text" v-model="value">   <p>{{value}}</p></div>\n')])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/MpGQUHiaib4ib6f2ojc8iatLbNAFrMiaFGU3ejiajiadwoV70ibeRlNiaoGekwPp5M6k0hucZHdu23Xtms2H663qdsB5ZoA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),t._v(" "),a("p",[t._v("从这里我们可以看到，我们还在输入的时候，光标还在的时候，下面的值就已经出来了，可以说是非常地实时。")]),t._v(" "),a("p",[t._v("但是有时候我们希望，在我们输入完所有东西，光标离开才更新视图。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div>   <input type="text" v-model.lazy="value">   <p>{{value}}</p></div>\n')])])])]),t._v(" "),a("p",[t._v("这样即可~这样只有当我们光标离开输入框的时候，它才会更新视图，相当于在onchange事件触发更新。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".trim")])])]),t._v(" "),a("p",[t._v("在我们的输入框中，我们经常需要过滤一下一些输入完密码不小心多敲了一下空格的兄弟输入的内容。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="text" v-model.trim="value">\n')])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/MpGQUHiaib4ib6f2ojc8iatLbNAFrMiaFGU3eicARmicu380n6fQjMN2K6SEO0SukbRpgc8TY41LB1NaQt4fHm7lOkpAQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),t._v(" "),a("p",[t._v("为了让你更清楚的看到，我改了一下样式，不过问题不大，相信你已经清楚看到这个大大的hello左右两边没有空格，尽管你在input框里敲烂了空格键。")]),t._v(" "),a("p",[t._v("需要注意的是，它只能"),a("strong",[t._v("过滤首尾的空格")]),t._v("！首尾，中间的是不会过滤的")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".number")])])]),t._v(" "),a("p",[t._v("看这个名字就知道，应该是限制输入数字或者输入的东西转换成数字，but不是辣么干的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/MpGQUHiaib4ib6f2ojc8iatLbNAFrMiaFGU3emgn9MW6YoicYP5bf26DWapFCsicQs23AMNicbM4bLJmU6FQnxNasIFcjA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/MpGQUHiaib4ib6f2ojc8iatLbNAFrMiaFGU3eibjgmo8sLznEbtKvG9omiamPqnR24wdmMX8oE7RhXDBYD6KwqpzxoGcw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),t._v(" "),a("p",[t._v("如果你先输入数字，那它就会限制你输入的只能是数字。\n如果你先输入字符串，那它就相当于没有加.number")]),t._v(" "),a("h3",{attrs:{id:"事件修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件修饰符"}},[t._v("#")]),t._v(" 事件修饰符")]),t._v(" "),a("p",[a("strong",[t._v(".stop")])]),t._v(" "),a("p",[t._v("由于事件冒泡的机制，我们给元素绑定点击事件的时候，也会触发父级的点击事件。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div @click="shout(2)">  <button @click="shout(1)">ok</button></div>//jsshout(e){  console.log(e)}//1//2\n')])])])]),t._v(" "),a("p",[t._v("一键阻止事件冒泡，简直方便得不行。相当于调用了event.stopPropagation()方法。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div @click="shout(2)">  <button @click.stop="shout(1)">ok</button></div>//只输出1\n')])])])]),t._v(" "),a("p",[a("strong",[t._v(".prevent")])]),t._v(" "),a("p",[t._v("用于阻止事件的默认行为，例如，当点击提交按钮时阻止对表单的提交。相当于调用了event.preventDefault()方法。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\x3c!-- 提交事件不再重载页面 --\x3e<form v-on:submit.prevent="onSubmit"></form>\n')])])])]),t._v(" "),a("p",[t._v("**注意：**修饰符可以同时使用多个,但是可能会因为顺序而有所不同。")]),t._v(" "),a("p",[t._v("用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。")]),t._v(" "),a("p",[t._v("也就是"),a("strong",[t._v("从左往右判断~")])]),t._v(" "),a("p",[a("strong",[t._v(".self")])]),t._v(" "),a("p",[t._v("只当事件是从事件绑定的元素本身触发时才触发回调。像下面所示，刚刚我们从.stop时候知道子元素会冒泡到父元素导致触发父元素的点击事件，当我们加了这个.self以后，我们点击button不会触发父元素的点击事件shout，只有当点击到父元素的时候（蓝色背景）才会shout~从这个self的英文翻译过来就是‘自己，本身’可以看出这个修饰符的用法")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="blue" @click.self="shout(2)">  <button @click="shout(1)">ok</button></div>\n')])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/MpGQUHiaib4ib6f2ojc8iatLbNAFrMiaFGU3e9CpFRjc7tsND4QCIkOibjze4b4TUtgo8qibh3mGY71nXpF4C2XzDd5fg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v(".once")])]),t._v(" "),a("p",[t._v("这个修饰符的用法也是和名字一样简单粗暴，只能用一次，绑定了事件以后只能触发一次，第二次就不会触发。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//键盘按坏都只能shout一次<button @click.once="shout(1)">ok</button>\n')])])])]),t._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("p",[a("strong",[t._v(".capture")])]),t._v(" "),a("p",[t._v("从上面我们知道了事件的冒泡，其实完整的事件机制是：捕获阶段--目标阶段--冒泡阶段。")]),t._v(" "),a("p",[t._v("默认的呢，是事件触发是从目标开始往上冒泡。")]),t._v(" "),a("p",[t._v("当我们加了这个.capture以后呢，我们就反过来了，事件触发从包含这个元素的顶层开始往下触发。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div @click.capture="shout(1)">      obj1      <div @click.capture="shout(2)">        obj2        <div @click="shout(3)">          obj3          <div @click="shout(4)">            obj4          </div>        </div>      </div>    </div>    // 1 2 4 3\n')])])])]),t._v(" "),a("p",[t._v("从上面这个例子我们点击obj4的时候，就可以清楚地看出区别，obj1，obj2在捕获阶段就触发了事件，因此是先1后2，后面的obj3，obj4是默认的冒泡阶段触发，因此是先4然后冒泡到3~")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".passive")])])]),t._v(" "),a("p",[t._v("当我们在监听元素滚动事件的时候，会一直触发onscroll事件，在pc端是没啥问题的，但是在移动端，会让我们的网页变卡，因此我们使用这个修饰符的时候，相当于给onscroll事件整了一个.lazy修饰符")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\x3c!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --\x3e\x3c!-- 而不会等待 `onScroll` 完成 --\x3e\x3c!-- 这其中包含 `event.preventDefault()` 的情况 --\x3e<div v-on:scroll.passive="onScroll">...</div>\n')])])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".native")])])]),t._v(" "),a("p",[t._v("我们经常会写很多的小组件，有些小组件可能会绑定一些事件，但是，像下面这样绑定事件是不会触发的")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<My-component @click="shout(3)"></My-component>\n')])])])]),t._v(" "),a("p",[t._v("必须使用.native来修饰这个click事件（即），可以理解为该修饰符的作用就是把一个vue组件转化为一个普通的HTML标签，\n注意："),a("strong",[t._v("使用.native修饰符来操作普通HTML标签是会令事件失效的")])]),t._v(" "),a("h3",{attrs:{id:"鼠标按钮修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鼠标按钮修饰符"}},[t._v("#")]),t._v(" 鼠标按钮修饰符")]),t._v(" "),a("p",[t._v("刚刚我们讲到这个click事件，我们一般是会用左键触发，有时候我们需要更改右键菜单啥的，就需要用到右键点击或者中间键点击，这个时候就要用到鼠标按钮修饰符")]),t._v(" "),a("ul",[a("li",[t._v(".left 左键点击")]),t._v(" "),a("li",[t._v(".right 右键点击")]),t._v(" "),a("li",[t._v(".middle 中键点击")])]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button @click.right="shout(1)">ok</button>\n')])])])]),t._v(" "),a("h3",{attrs:{id:"键值修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键值修饰符"}},[t._v("#")]),t._v(" 键值修饰符")]),t._v(" "),a("p",[t._v("其实这个也算是事件修饰符的一种，因为它都是用来修饰键盘事件的。\n比如onkeyup，onkeydown啊")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".keyCode")])])]),t._v(" "),a("p",[t._v("如果不用keyCode修饰符，那我们每次按下键盘都会触发shout，当我们想指定按下某一个键才触发这个shout的时候，这个修饰符就有用了，具体键码查看键码对应表https://zhidao.baidu.com/question/266291349.html")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="text" @keyup.keyCode="shout(4)">\n')])])])]),t._v(" "),a("p",[t._v("为了方便我们使用，vue给一些常用的键提供了别名")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//普通键.enter.tab.delete //(捕获“删除”和“退格”键).space.esc.up.down.left.right//系统修饰键.ctrl.alt.meta.shift\n")])])])]),t._v(" "),a("p",[t._v("可以通过全局 config.keyCodes 对象自定义按键修饰符别名：")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 可以使用 `v-on:keyup.f1`Vue.config.keyCodes.f1 = 112\n")])])])]),t._v(" "),a("p",[t._v("我们从上面看到，键分成了普通常用的键和系统修饰键，区别是什么呢？\n当我们写如下代码的时候,我们会发现如果"),a("strong",[t._v("仅仅")]),t._v("使用系统修饰键是无法触发keyup事件的。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="text" @keyup.ctrl="shout(4)">\n')])])])]),t._v(" "),a("p",[t._v("那该如何呢？我们需要将系统修饰键和其他键码链接起来使用，比如")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="text" @keyup.ctrl.67="shout(4)">\n')])])])]),t._v(" "),a("p",[t._v("这样当我们同时按下ctrl+c时，就会触发keyup事件。\n另，如果是鼠标事件，那就可以单独使用系统修饰符。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button @mouseover.ctrl="shout(1)">ok</button> <button @mousedown.ctrl="shout(1)">ok</button> <button @click.ctrl.67="shout(1)">ok</button>\n')])])])]),t._v(" "),a("p",[t._v("大概是什么意思呢，就是你不能"),a("strong",[t._v("单手指使用系统修饰键的修饰符")]),t._v("（最少两个手指，可以多个）。你可以一个手指按住系统修饰键一个手指按住另外一个键来实现键盘事件。也可以用一个手指按住系统修饰键，另一只手按住鼠标来实现鼠标事件。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".exact")]),t._v(" "),a("strong",[t._v("(2.5新增)")])])]),t._v(" "),a("p",[t._v("我们上面说了这个系统修饰键，当我们像这样绑定了click键按下的事件，惊奇的是，我们同时按下几个系统修饰键，比如ctrl shift点击，也能触发，可能有些场景我们"),a("strong",[t._v("只需要或者只能")]),t._v("按一个系统修饰键来触发（像制作一些快捷键的时候），而当我们按下ctrl和其他键的时候则无法触发。那就这样写。")]),t._v(" "),a("p",[t._v("注意：这个"),a("strong",[t._v("只是限制系统修饰键")]),t._v("的，像下面这样书写以后你还是可以按下ctrl + c，ctrl+v或者ctrl+普通键 来触发，但是不能按下ctrl + shift +普通键来触发。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button type="text" @click.ctrl.exact="shout(4)">ok</button>\n')])])])]),t._v(" "),a("p",[t._v("然后下面这个你可以同时按下enter+普通键来触发，但是不能按下系统修饰键+enter来触发。相信你已经能听懂了8~")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input type="text" @keydown.enter.exact="shout(\'我被触发了\')">\n')])])]),a("h3",{attrs:{id:"v-bind修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-bind修饰符"}},[t._v("#")]),t._v(" v-bind修饰符")]),t._v(" "),a("p",[a("strong",[t._v(".sync(2.3.0+ 新增)")])]),t._v(" "),a("p",[t._v("在有些情况下，我们可能需要对一个 prop 进行“双向绑定”。不幸的是，真正的双向绑定会带来维护上的问题，因为子组件可以修改父组件，且在父组件和子组件都没有明显的改动来源。我们通常的做法是")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//父亲组件<comp :myMessage="bar" @update:myMessage="func"></comp>//jsfunc(e){ this.bar = e;}//子组件jsfunc2(){  this.$emit(\'update:myMessage\',params);}\n')])])])]),t._v(" "),a("p",[t._v("现在这个.sync修饰符就是简化了上面的步骤")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//父组件<comp :myMessage.sync=\"bar\"></comp>//子组件this.$emit('update:myMessage',params);\n")])])])]),t._v(" "),a("p",[t._v("这样确实会方便很多，但是也有很多需要注意的点")]),t._v(" "),a("p",[t._v("1、使用sync的时候，子组件传递的事件名必须为update:value，其中value必须与子组件中props中声明的名称完全一致(如上例中的myMessage，不能使用my-message)")]),t._v(" "),a("p",[t._v("2、注意带有 .sync 修饰符的 v-bind 不能和表达式一起使用 (例如 v-bind:title.sync=”doc.title + ‘!’” 是无效的)。取而代之的是，你只能提供你想要绑定的属性名，类似 v-model。")]),t._v(" "),a("p",[t._v("3将 v-bind.sync 用在一个字面量的对象上，例如 v-bind.sync=”{ title: doc.title }”，是无法正常工作的，因为在解析一个像这样的复杂表达式的时候，有很多边缘情况需要考虑。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".prop")])])]),t._v(" "),a("p",[t._v("要学习这个修饰符，我们首先要搞懂两个东西的区别。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Property：节点对象在内存中存储的属性，可以访问和设置。Attribute：节点对象的其中一个属性( property )，值是一个对象。可以通过点访问法 document.getElementById('xx').attributes 或者 document.getElementById('xx').getAttributes('xx') 读取，通过 document.getElementById('xx').setAttribute('xx',value) 新增和修改。在标签里定义的所有属性包括 HTML 属性和自定义属性都会在 attributes 对象里以键值对的方式存在。\n")])])])]),t._v(" "),a("p",[t._v("其实attribute和property两个单词，翻译出来都是属性，但是《javascript高级程序设计》将它们翻译为特性和属性，以示区分")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//这里的id,value,style都属于property//index属于attribute//id、title等既是属性，也是特性。修改属性，其对应的特性会发生改变；修改特性，属性也会改变<input id="uid" title="title1" value="1" :index="index">//input.index === undefined//input.attributes.index === this.index\n')])])])]),t._v(" "),a("p",[t._v("从上面我们可以看到如果直接使用v-bind绑定，则默认会绑定到dom节点的attribute。\n为了")]),t._v(" "),a("ul",[a("li",[t._v("通过自定义属性存储变量，避免暴露数据")]),t._v(" "),a("li",[t._v("防止污染 HTML 结构")])]),t._v(" "),a("p",[t._v("我们可以使用这个修饰符，如下")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input id="uid" title="title1" value="1" :index.prop="index">//input.index === this.index//input.attributes.index === undefined\n')])])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".camel")])])]),t._v(" "),a("p",[t._v("由于HTML 特性是不区分大小写的。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<svg :viewBox="viewBox"></svg>\n')])])])]),t._v(" "),a("p",[t._v("实际上会渲染为")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<svg viewbox="viewBox"></svg>\n')])])])]),t._v(" "),a("p",[t._v("这将导致渲染失败，因为 SVG 标签只认 viewBox，却不知道 viewbox 是什么。\n如果我们使用.camel修饰符，那它就会被渲染为驼峰名。\n另，如果你使用字符串模版，则没有这些限制。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("new Vue({  template: '<svg :viewBox=\"viewBox\"></svg>'})\n")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);